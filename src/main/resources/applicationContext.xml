<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	
	<!--this tells Spring to scan classes for annotations -->
	<context:component-scan base-package="rest.server"/>

	<bean id="log4jInitializer" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod">
			<value>org.springframework.util.Log4jConfigurer.initLogging</value>
		</property>
		<property name="arguments">
			<list>
				<value>file:${user.dir}/log4j.properties</value>
			</list>
		</property>
	</bean>
	
	<bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<qualifier value="configProperties"/>
		<property name="properties">
			<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
				<property name="targetClass" value="java.lang.System"/>
				<property name="targetMethod" value="getProperties"/>
			</bean>
		</property>
		<property name="localOverride" value="true"/>
		<property name="locations">
			<list>
				 <value>file:${user.dir}/config.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="false"/>
	</bean>
	
	<!--this allows properties to be accessed within this context file via ${property.key}-->
	<bean id="corePropertyPlaceHolderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<property name="ignoreUnresolvablePlaceholders" value="false" />
		<property name="ignoreResourceNotFound" value="false" />
		<property name="locations">
			<list>
			    <value>file:${user.dir}/config.properties</value>
			</list>
		</property>
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
		
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"><value>${db.jdbcdriver}</value></property>
		<property name="url"><value>${db.jdbcurl}</value></property>
		<property name="username"><value>${db.userid}</value></property>
		<property name="password"><value>${db.userpwd}</value></property>
		<property name="maxActive" value="50"/>
		<property name="initialSize" value="10"/>
		<property name="maxIdle" value="20"/>
		<property name="minIdle" value="10"/>
		<property name="maxWait" value="150"/>
		<property name="defaultAutoCommit" value="true"/>
		<property name="removeAbandoned" value="true"/>
		<property name="removeAbandonedTimeout" value="600"/>
		<property name="logAbandoned" value="true"/>
		<property name="validationQuery" value="${db.validatequery}"/>
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="false"/>
		<property name="timeBetweenEvictionRunsMillis" value="600000"/>
		<property name="minEvictableIdleTimeMillis" value="900000"/>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				
				<prop key="hibernate.query.substitutions">true 1, false 0, yes 'Y', no 'N'</prop>
				<prop key="hibernate.max_fetch_depth">1</prop>
				<prop key="hibernate.jdbc.batch_versioned_data">true</prop>
				<prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
				<prop key="hibernate.cache.use_structured_entries">false</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">false</prop>
				<prop key="hibernate.default_batch_fetch_size">30</prop>
				<prop key="custom.cache.statistics">false</prop>
				<prop key="hibernate.default_schema">${hibernate.default_schema}</prop>
			</props>
		</property>
			
		<property name="packagesToScan">
			<list>
				<value>rest.server.pojos</value>
			</list>
		</property>
	</bean>
	
	
</beans>